pipeline {
    agent any

    environment {
        IMAGE_NAME = "pavanprem/myapp:latest"
        CONTAINER_NAME = "myapp-container"
    }

    stages {
        stage('Check Docker') {
            steps {
                script {
                    echo "üîç Checking Docker Installation & Running Containers"
                    sh "docker --version"
                    sh "docker ps"
                }
            }
        }

        stage('Checkout Code') {
            steps {
                echo "üì• Checking out source code from GitHub"
                git 'https://github.com/PavanKalyan96Dev/SpringBootJenkins.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo "üî® Building Docker Image: $IMAGE_NAME"
                    sh "docker build -t $IMAGE_NAME ${env.WORKSPACE}"
                }
            }
        }

        stage('Run Container') {
            steps {
                script {
                    echo "üöÄ Running Container: $CONTAINER_NAME"
                    sh "docker stop $CONTAINER_NAME || true"
                    sh "docker rm $CONTAINER_NAME || true"
                    sh "docker run -d --name $CONTAINER_NAME -p 8080:8080 $IMAGE_NAME"
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    echo "üîë Logging into Docker Hub"
                    sh "echo '\$DOCKER_PASSWORD' | docker login -u '\$DOCKER_USERNAME' --password-stdin"
                    
                    echo "üì§ Pushing Image to Docker Hub: $IMAGE_NAME"
                    sh "docker push $IMAGE_NAME"
                }
            }
        }

        stage('Clean Up') {
            steps {
                script {
                    echo "üßπ Cleaning Up Unused Docker Resources"
                    sh "docker stop $CONTAINER_NAME || true"
                    sh "docker rm $CONTAINER_NAME || true"
                    sh "docker image prune -f || true"
                }
            }
        }
    }
}
